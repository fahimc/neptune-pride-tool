var Api={isProd:()=>location.hostname.includes("np."),reload(){console.log("reload"),window.$&&$(".widget").click()},transferRequest(e,t){console.log(e),this.request("ship_transfer,"+e.uid+","+t)},fleetOrders(e){let t=[],n=[],a=[],r=[];e.o.forEach(e=>{t.push(e[0]),n.push(e[1]),a.push(e[2]),r.push(e[3])}),t.length&&this.request("add_fleet_orders,"+e.uid+","+t.join("_")+","+n.join("_")+","+a.join("_")+","+r.join("_")+",0"),1!=e.loop&&this.request("clear_fleet_orders,"+e.uid)},request(e){console.log(e),jQuery.ajax({url:"/trequest/order",type:"POST",dataType:"json",data:{type:"order",order:e,version:"",game_number:NeptunesPride.gameNumber},success:e=>{},error:e=>{}})},sendShip(e,t){this.isProd()?this.fleetOrders(e):window.Simulation&&Simulation.sendShip(e,t)},transferShips(e,t,n){this.isProd()?this.transferRequest(t,n):window.Simulation&&Simulation.transferShips(e,t,n)}},AI={version:.45,state:{aiMode:!1,transcript:[]},clean(){this.alreadyTrackingFleets={}},init(){console.log("version: "+this.version),localStorage.clear(),setInterval(Api.reload,3e5),this.timer=setInterval(()=>{NeptunesPride.universe.galaxy&&(this.state.aiMode&&this.checkStarUnderAttack(),this.allPlayerStats(),this.starsInfo(),window.GameUI&&GameUI.update())},1e3)},toggle(){this.state.aiMode=!this.state.aiMode,console.log("ai mode is",this.state.aiMode)},stop(){clearInterval(this.timer)},calcUCEUpgrade:(e,t)=>Math.floor(2.5*NeptunesPride.gameConfig.developmentCostEconomy*(e+1)/(t/100)),calcUCE:(e,t)=>Math.floor(2.5*NeptunesPride.gameConfig.developmentCostEconomy*(e.e+1)/((void 0!==t?t:e.r)/100)),calcUCI:(e,t)=>Math.floor(5*NeptunesPride.gameConfig.developmentCostIndustry*(e.i+1)/((void 0!==t?t:e.r)/100)),calcUCS:(e,t)=>Math.floor(20*NeptunesPride.gameConfig.developmentCostScience*(e.s+1)/((void 0!==t?t:e.r)/100)),calcUCG:(e,t)=>0===NeptunesPride.gameConfig.buildGates?0:Math.floor(100*NeptunesPride.gameConfig.buildGates/((void 0!==t?t:e.r)/100)),getMyStars(){const e=[];return Object.keys(NeptunesPride.universe.galaxy.stars).forEach(t=>{NeptunesPride.universe.galaxy.stars[t].puid==NeptunesPride.universe.galaxy.player_uid&&e.push(stars)}),e},comparePlayers(){const e=[],t=[];let n=0;const a={weapons:0,ships:0,cash:0};Object.keys(NeptunesPride.universe.galaxy.players).forEach(r=>{const s=NeptunesPride.universe.galaxy.players[r],i=NeptunesPride.universe.galaxy.players[NeptunesPride.universe.galaxy.player_uid];if(s.uid!==NeptunesPride.universe.galaxy.player_uid){const t=10*s.total_economy,r=75*s.tech.banking.level,o=i.tech.weapons.level-s.tech.weapons.level,l=i.total_strength-s.total_strength<0?`<span class="red-color">${i.total_strength-s.total_strength}</span>`:i.total_strength-s.total_strength,c=10*i.total_economy+75*i.tech.banking.level-(t+r);e.push({playerName:s.alias,cash:c<0?`<span class="red-color">${c}</span>`:c,economy:i.total_economy-s.total_economy<0?`<span class="red-color">${i.total_economy-s.total_economy}</span>`:i.total_economy-s.total_economy,fleets:i.total_fleets-s.total_fleets<0?`<span class="red-color">${i.total_fleets-s.total_fleets}</span>`:i.total_fleets-s.total_fleets,industry:i.total_industry-s.total_industry<0?`<span class="red-color">${i.total_industry-s.total_industry}</span>`:i.total_industry-s.total_industry,science:i.total_science-s.total_science<0?`<span class="red-color">${i.total_science-s.total_science}</span>`:i.total_science-s.total_science,stars:i.total_stars-s.total_stars<0?`<span class="red-color">${i.total_stars-s.total_stars}</span>`:i.total_stars-s.total_stars,ships:l<0?`<span class="red-color">${l}</span>`:l,weapons:o<0?`<span class="red-color">${o}</span>`:o,range:i.tech.propulsion.level-s.tech.propulsion.level<0?`<span class="red-color">${i.tech.propulsion.level-s.tech.propulsion.level}</span>`:i.tech.propulsion.level-s.tech.propulsion.level,scanning:i.tech.scanning.level-s.tech.scanning.level<0?`<span class="red-color">${i.tech.scanning.level-s.tech.scanning.level}</span>`:i.tech.scanning.level-s.tech.scanning.level,manufacturing:i.tech.manufacturing.level-s.tech.manufacturing.level<0?`<span class="red-color">${i.tech.manufacturing.level-s.tech.manufacturing.level}</span>`:i.tech.manufacturing.level-s.tech.manufacturing.level}),o<0&&a.weapons++,l<0&&a.ships++,c<0&&a.cash++,n++}t.push({playerName:s.uid==i.uid?`<span class="orange-color">${s.alias}</span>`:s.alias,scanning:this.setColor(i.tech.scanning.level,s.tech.scanning.level,"red",s.uid==i.uid?"orange":""),manufacturing:this.setColor(i.tech.manufacturing.level,s.tech.manufacturing.level,"red",s.uid==i.uid?"orange":""),weapons:this.setColor(i.tech.weapons.level,s.tech.weapons.level,"red",s.uid==i.uid?"orange":""),research:this.setColor(i.tech.research.level,s.tech.research.level,"red",s.uid==i.uid?"orange":""),propulsion:this.setColor(i.tech.propulsion.level,s.tech.propulsion.level,"red",s.uid==i.uid?"orange":""),terraforming:this.setColor(i.tech.terraforming.level,s.tech.terraforming.level,"red",s.uid==i.uid?"orange":""),banking:this.setColor(i.tech.banking.level,s.tech.banking.level,"red",s.uid==i.uid?"orange":"")})});const r=[];return a.weapons&&a.ships&&r.push("At least one of our enemies has more ships and weapons. Need to increase production as our enemies are getting stronger than us."),a.weapons&&r.push(a.weapons==n?"We should focus reasearch on weapons or trade for it. We're behind all players in this tech":"We're falling behind on weapons tech. We need to consider researching weapons in the next few cycles"),a.cash&&r.push(a.cash==n?"We need to invest in economy and banking as all other players have more cash than us.":"We're falling behind on cash. We need to consider researching banking in the next few cycles or increase economy"),a.ships&&r.push(a.ships==n?"We need to invest in manufactoring and industry as all other players have more ships than us.":"We're falling behind on ships. We need to consider researching manufactoring in the next few cycles or increase industry"),{compare:e,tech:t,recommendations:r}},setColor:(e,t,n,a)=>e<t?`<span class="${n||"red"}-color">${t}</span>`:`<span class="${a||""}-color">${t}</span>`,upgradeData(){let e=0,t=0,n=0,a=0,r=0,s=0,i=0,o=0,l=0,c=0;const d=NeptunesPride.universe.galaxy.players[NeptunesPride.universe.galaxy.player_uid];return Object.keys(NeptunesPride.universe.galaxy.stars).forEach(p=>{const u=NeptunesPride.universe.galaxy.stars[p];u.puid===NeptunesPride.universe.galaxy.player_uid&&(e+=u.r,t+=u.nr,n+=this.calcUCE(u),i+=this.calcUCE(u,5*(d.tech.terraforming.level+1)+u.nr),o+=this.calcUCI(u,5*(d.tech.terraforming.level+1)+u.nr),l+=this.calcUCS(u,5*(d.tech.terraforming.level+1)+u.nr),c+=this.calcUCG(u,5*(d.tech.terraforming.level+1)+u.nr),a+=this.calcUCI(u),r+=this.calcUCS(u),s+=this.calcUCG(u))}),{economy:{currentTotalCost:"$"+n,upgrade:"$"+i,saving:(100*(1-i/n)).toFixed(1)+"%"},industry:{currentTotalCost:"$"+a,upgrade:"$"+o,saving:(100*(1-o/a)).toFixed(1)+"%"},science:{currentTotalCost:"$"+r,upgrade:"$"+l,saving:(100*(1-l/r)).toFixed(1)+"%"},gate:{currentTotalCost:"$"+s,upgrade:"$"+c,saving:(100*(1-c/s)).toFixed(1)+"%"},manufactoring:{level:d.tech.manufacturing.level,currentShipsPerHour:Math.round(d.total_industry*(d.tech.manufacturing.level+5)/24),upgradeShipsPerHour:Math.round(d.total_industry*(d.tech.manufacturing.level+1+5)/24)},banking:{level:d.tech.banking.level,currentPerProd:10*d.total_economy+75*d.tech.banking.level,upgradePerProd:10*d.total_economy+75*(d.tech.banking.level+1)}}},allPlayerStats(){const e=[],t=[];return Object.keys(NeptunesPride.universe.galaxy.players).forEach(n=>{const a=NeptunesPride.universe.galaxy.players[n],r=10*a.total_economy,s=75*a.tech.banking.level;e.push({uid:a.uid,player:a.alias,bankingPerProd:r+s,shipsPer30Mins:Math.round(a.total_industry*(a.tech.manufacturing.level+5)/24),experimentationPoints:72*a.tech.research.level,experimentationPointsTime:NeptunesPride.universe.timeToTick(72*a.tech.research.level),hyperspaceRange:a.tech.propulsion.level+3+" ly",scanning:a.tech.scanning.level+2+" ly"});const i={player:a.alias};Object.keys(a.tech).forEach(e=>{i[e]={currentLevel:a.tech[e].level,timeToNext:NeptunesPride.universe.timeToTick(144*(a.tech[e].level-0)-(void 0!==a.tech[e].research?a.tech[e].research:0))}}),t.push(i)}),{players:e,toNextTechLevel:t}},starsInfo(){const e={},t=NeptunesPride.universe.galaxy.player_uid;NeptunesPride.universe.galaxy.players[t];return Object.keys(NeptunesPride.universe.galaxy.stars).forEach(t=>{const n=NeptunesPride.universe.galaxy.stars[t];if(n.puid>=0){const t=NeptunesPride.universe.galaxy.players[n.puid];e[t.uid]=e[t.uid]?e[t.uid]:{player:t.alias,topStars:[],inRangeForAttack:[]},(n.nr>=40||n.n>=40)&&e[t.uid].topStars.push({name:n.n,NaturalResource:n.nr,Terraformed:n.r}),n.puid!==NeptunesPride.universe.galaxy.player_uid?Object.keys(NeptunesPride.universe.galaxy.stars).forEach(a=>{const r=NeptunesPride.universe.galaxy.stars[a];r.puid==NeptunesPride.universe.galaxy.player_uid&&this.isInRange(n,r,t.tech.propulsion.value)&&e[t.uid].inRangeForAttack.push({enemyStar:{owner:NeptunesPride.universe.galaxy.players[n.puid].alias,starName:n.n,NaturalResource:n.nr,Terraformed:n.r,ships:this.getShipsOnOrbitingFleets(n).totalShips+n.st,myStar:r.n},myStar:{owner:NeptunesPride.universe.galaxy.players[r.puid]?NeptunesPride.universe.galaxy.players[r.puid].alias:"unknown",starName:r.n,NaturalResource:r.nr,Terraformed:r.r,ships:this.getShipsOnOrbitingFleets(r).totalShips+r.st}})}):Object.keys(NeptunesPride.universe.galaxy.stars).forEach(a=>{const r=NeptunesPride.universe.galaxy.stars[a];r.puid!==NeptunesPride.universe.galaxy.player_uid&&this.isInRange(n,r,t.tech.propulsion.value)&&e[t.uid].inRangeForAttack.push({myStar:{owner:NeptunesPride.universe.galaxy.players[n.puid].alias,starName:n.n,NaturalResource:n.nr,Terraformed:n.r,ships:this.getShipsOnOrbitingFleets(n).totalShips+n.st},enemyStar:{myStar:n.n,owner:NeptunesPride.universe.galaxy.players[r.puid]?NeptunesPride.universe.galaxy.players[r.puid].alias:"unknown",starName:r.n,NaturalResource:r.nr,Terraformed:r.r,ships:this.getShipsOnOrbitingFleets(r).totalShips+r.st}})})}}),e},isInRange(e,t,n){var a,r;return a=Math.abs(e.x-t.x),r=Math.abs(e.y-t.y),n>=Math.sqrt(a*a+r*r)},getShipsOnOrbitingFleets(e){let t={totalShips:0,fleets:[]};return Object.keys(NeptunesPride.universe.galaxy.fleets).forEach(n=>{const a=NeptunesPride.universe.galaxy.fleets[n];void 0!==a.ouid&&a.ouid==e.uid&&e.puid==a.puid&&(t.totalShips+=a.st,t.fleets.push(a))}),t},checkTravelCapability(e,t){const n=this.initRuler(),a=NeptunesPride.universe.galaxy.stars[e]||NeptunesPride.universe.galaxy.fleets[e],r=NeptunesPride.universe.galaxy.stars[t];n.stars.push(r);const s=this.updateRuler(a,n);return{time:this.timeToTick(s.eta),techLevel:s.hsRequired,distance:s.ly+" light years",ly:s.ly,eta:s.eta}},initRuler(){const e={stars:[],eta:0,baseEta:0,gateEta:0,gate:!0,totalDist:0,ly:"0.0",hsRequired:0};return e},updateRuler(e,n){if(t=e,t!==n.stars[n.stars.length-1]){"fleet"===t.kind&&t.orbiting?n.stars.push(t.orbiting):n.stars.push(t);var a=n.stars.length;if(!(2>a)){var r=n.stars[a-2],s=n.stars[a-1],i=this.distance(r.x,r.y,s.x,s.y),o=NeptunesPride.universe.galaxy.fleet_speed,l=Math.floor(i/o)+1,c=Math.floor(i/(3*o))+1;n.baseEta+=l;var d=l;n.eta+=d,n.gateEta+="fleet"!==r.kind&&"fleet"!==s.kind?c:d,n.totalDist+=i;var p=8*n.totalDist;n.ly=(Math.round(1e3*p)/1e3).toFixed(3),n.hsRequired=Math.max(n.hsRequired,Math.floor(8*i)-2,1)}}return n},shipsPerTickByindustry(e,t,n){return this.calcShipsPerTick(e,n||this.playerId,t)},addFleetWaypointByStar(e,t,n){let a=n||this.getFleetById(e);return this.clearFleetWaypoints(a),a.orders.push([0,t,0,0]),a.path.push(this.galaxy.stars[t]),a},clearFleetWaypoints(e){var t=e;return t.orders=[],t.path=[],t},battle(e,t){const n=NeptunesPride.universe.galaxy.stars[e];let a=[];const r={starName:n.n,playerName:NeptunesPride.universe.galaxy.players[n.puid]?NeptunesPride.universe.galaxy.players[n.puid].alias:"unknown",playerWeaponsLevel:NeptunesPride.universe.galaxy.players[n.puid]&&NeptunesPride.universe.galaxy.players[n.puid].tech.weapons.level,numberOfShips:n.st,shipsPer30Mins:void 0!==NeptunesPride.universe.galaxy.players[n.puid]&&Number(this.shipsPerTickByindustry(NeptunesPride.universe.galaxy.stars[e],void 0,n.puid)),defenderWeaponTech:void 0!==NeptunesPride.universe.galaxy.players[n.puid]&&NeptunesPride.universe.galaxy.players[n.puid].tech.weapons.level+1};if(t){let e=r.numberOfShips;Object.keys(NeptunesPride.universe.galaxy.fleets).forEach(t=>{const s=NeptunesPride.universe.galaxy.fleets[t];s.o.forEach(t=>{if(t[1]==n.uid&&s.puid!==n.puid){this.addFleetWaypointByStar(s.uid,n.uid);const t=this.timeToTick(s.etaFirst).split(""),i=Number(t[0].replace("h","")),o=Number(t[1].replace("m",""))>=30?1:0,l=e?e+2*r.shipsPer30Mins*i+o:0,c=NeptunesPride.universe.galaxy.players[s.puid]&&NeptunesPride.universe.galaxy.players[s.puid].tech.weapons.level,d=this.fight(r.defenderWeaponTech,c,l,s.st);e=d.defendersShips;let p=l;if(!d.defendersShips){let e=1,t=0;for(;!t;)potentialBattleInfo=this.fight(r.defenderWeaponTech,p,c,s.st),p+=e,t=Math.floor(potentialBattleInfo.defendersShips)}a.push({playerId:NeptunesPride.universe.galaxy.players[s.puid].alias,playerWeaponsLevel:c,carrier:s.n,numberOfShips:s.st,arrivalTime:this.timeToTick(s.etaFirst),eta:s.etaFirst,defenderShipsOnArrival:l,totalShipsNeeded:p,minimumExtraShipsRequired:Math.floor(p-l)})}})})}return a=a.sort((e,t)=>e.eta-t.eta).map(e=>{const{eta:t,...n}=e;return n}),a},fight(e,t,n,a){for(var r="";!r;){if(0>=(a-=e)){r="defender";break}if(0>=(t-=n)){r="attacker";break}}return{attackersShips:a<0?0:a,defendersShips:t<0?0:t}},getMyStars(){const e={};return Object.keys(NeptunesPride.universe.galaxy.stars).forEach(t=>{NeptunesPride.universe.galaxy.stars[t].puid===NeptunesPride.universe.galaxy.player_uid&&(e[t]=NeptunesPride.universe.galaxy.stars[t])}),e},timeToTick:e=>NeptunesPride.universe.timeToTick(e),distance:(e,t,n,a)=>Math.sqrt((e-n)*(e-n)+(t-a)*(t-a)),calcShipsPerTick(e,t,n){const a=NeptunesPride.universe.galaxy.stars[e],r=NeptunesPride.universe.galaxy.players[t];var s=(n||a.i)*(5+r.tech.manufacturing.level)/NeptunesPride.universe.galaxy.production_rate;return s!==Math.round(s)&&(s=s.toFixed(2)),s},alreadyTrackingFleets:{},calculatePotentialShipsByTime(e,t){const n=this.calcShipsPerTick(t.uid,NeptunesPride.universe.galaxy.player_uid),a=e.match(/([0-9])+h /),r=e.match(/ ([0-9])+m /),s=a&&a[1]?Number(a[1]):void 0,i=r&&r[1]?Number(r[1]):void 0;let o=0;return isNaN(s)||(o=2*s*n),isNaN(i)||(o+=i/30),o},talk(e){console.log("AI - "+e.toUpperCase()),this.state.transcript.push(e.toUpperCase()),this.state.transcript.length>10&&this.state.transcript.shift()},canFleetGetThereInTime(e){},areFleetsOnRouteForDefence(e,t,n){let a=0;return Object.keys(NeptunesPride.universe.galaxy.fleets).forEach(n=>{const r=NeptunesPride.universe.galaxy.fleets[n];if(r.ouid==e.uid||r.o&&r.o[0]&&r.o[0][1]==e.uid&&r.puid==e.puid){this.checkTravelCapability(r.uid,e.uid).ly<=t.ly&&(a+=r.st)}}),a>=n},closetStars(e){const t=[],n=this.getMyStars();return Object.keys(n).forEach(n=>{const a=NeptunesPride.universe.galaxy.stars[n];if(a.uid===e.uid)return;const r=this.checkTravelCapability(a.uid,n);r.techLevel<=NeptunesPride.universe.galaxy.players[a.puid].tech.propulsion.level&&t.push({star:a,eta:r.eta,travel:r})}),t},checkPlayerNotifications(){const e=localStorage.getItem("player-intel"),t=e?JSON.parse(e):void 0,n={},a=[];return Object.keys(NeptunesPride.universe.galaxy.players).forEach(e=>{const r=NeptunesPride.universe.galaxy.players[e];t&&Object.keys(r.tech).forEach(n=>{r.tech[n].level>t[e].tech[n]&&a.push(`<span class="orange-color">${r.alias}</span> has increased <span class="orange-color">${n}</span> to <span class="orange-color">${r.tech[n].level}</span>`)}),n[e]={tech:{banking:r.tech.banking.level,manufacturing:r.tech.manufacturing.level,propulsion:r.tech.propulsion.level,research:r.tech.research.level,weapons:r.tech.weapons.level,scanning:r.tech.scanning.level,terraforming:r.tech.terraforming.level},total_economy:r.total_economy,total_fleets:r.total_fleets,total_industry:r.total_industry,total_science:r.total_science,total_stars:r.total_stars,total_strength:r.total_strength}}),t||localStorage.setItem("player-intel",JSON.stringify(n)),a},checkStarUnderAttack(){NeptunesPride.universe.galaxy&&Object.keys(NeptunesPride.universe.galaxy.fleets).forEach(e=>{const t=NeptunesPride.universe.galaxy.fleets[e];t.puid!=NeptunesPride.universe.galaxy.player_uid&&t.o&&t.o.length&&t.o.forEach(e=>{const n=e[1],a=this.checkTravelCapability(t.uid,n),r=NeptunesPride.universe.galaxy.stars[n];if(this.alreadyTrackingFleets[t.uid]&&this.alreadyTrackingFleets[t.uid].destination==n)return;const s=this.calculatePotentialShipsByTime(a.time,r),i=r.st+s;if(r&&r.puid==NeptunesPride.universe.galaxy.player_uid){this.talk(`Detected a fleet (${t.n}) coming t0 ${r.n} star`),this.talk(`${t.n} will take ${a.time}`),this.alreadyTrackingFleets[t.uid]={destination:r.uid};const e=GameStats.battle(r.uid,!0);if(this.areFleetsOnRouteForDefence(r,a,e[0].minimumExtraShipsRequired))return;if(e[0].minimumExtraShipsRequired){this.talk("Looks like we don't have enough ships to defend this star!"),this.talk("Let me look around our nearest stars for help");let t=[];const s=this.getMyStars();if(Object.keys(s).forEach(e=>{const r=NeptunesPride.universe.galaxy.stars[e];if(r.uid===n)return;const s=this.checkTravelCapability(n,e);s.techLevel<=NeptunesPride.universe.galaxy.players[r.puid].tech.propulsion.level&&s.ly<a.ly&&t.push({star:r,eta:s.eta,travel:s})}),t.length){this.talk("We have a few stars that can help and get there in time!"),this.talk("Let me see if we have enough ships to send as backup");let n={totalShips:i,star:[]},s=!1;if(t.forEach(t=>{if(t.travel.ly<a.ly){const a=t.star.st,o=this.getShipsOnOrbitingFleets(t.star);if(n.totalShips+=a+o.totalShips,n.star.push({star:t,totalShips:a+o.totalShips}),i+a+o.totalShips>=e[0].minimumExtraShipsRequired){const n=e[0].minimumExtraShipsRequired-a,i=o.fleets.find(e=>e.st>=n);i&&(this.talk(`We have enough ships on ${t.star.n} so I'll dispatch a fleet`),Api.transferShips(t.star,i,t.star.st),Api.sendShip(i,r),this.talk(`Dispatched ${i.n} with ${i.st} and will take ${this.timeToTick(t.eta)}`),s=!0)}}}),!s)if(this.talk("need to see if we can bring ships from more than one place or if it's worth defending"),1==t.length){if(this.talk("we dont have any help need to consider saving fleets"),r.nr<30||r.r<30){const e=this.getShipsOnOrbitingFleets(r);if(e.fleets.length){Api.transferShips(r,e.fleets[0],r.st);const t=this.closetStars(r);t?e.fleets.forEach(e=>{Api.sendShip(e,t[0].star)}):this.talk("Damn no stars to travel too!\nWe're sitting ducks!")}this.talk("Star isnt worth the fight.")}}else{let n=0;this.talk("We have ships around to help. Will gather them"),t.forEach(t=>{if(!(n>=e[0].minimumExtraShipsRequired)&&t.travel.ly<a.ly){const e=this.getShipsOnOrbitingFleets(t.star);if(e.fleets.length){const a=t.star.st-10?t.star.st-10:0;a&&(Api.transferShips(t.star,e.fleets[0],a),n+=e.fleets[0].st),Api.sendShip(e.fleets[0],r)}}})}}}else this.talk("Let them come! we're ready!")}})})},strategy:{beginning:["beginning is the first 2-3 cycles","build and spend on fleets. explore and capture planets with resources higher than 10","ships are not important at this stage","Protest the borders","invest in economy and science","research terraforming and banking then weapons"],midGame:["mid game is the next 2-3 cycles","catchup on ships","manufactoring is better than terraforming when planets get captured so switch to manufactoring","research on weapons and manufactoring"]}},GameUI={colors:{darkBlue:"#1A1D44",black:"#000000",yellow:"#FF9000"},container:null,css:"\n    :root{\n        --blue:rgba(0, 159, 223, 1);\n    }\n    .orange-color {\n            color: orange;\n    }\n    .red-color {\n      color: #e74c3c;\n}\n    .switch {\n        position: relative;\n        display: inline-block;\n        width: 60px;\n        height: 34px;\n      }\n      \n      .switch input { \n        opacity: 0;\n        width: 0;\n        height: 0;\n      }\n      \n      .slider {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: #ccc;\n        -webkit-transition: .4s;\n        transition: .4s;\n      }\n      \n      .slider:before {\n        position: absolute;\n        content: \"\";\n        height: 26px;\n        width: 26px;\n        left: 4px;\n        bottom: 4px;\n        background-color: white;\n        -webkit-transition: .4s;\n        transition: .4s;\n      }\n      \n      input:checked + .slider {\n        background-color:var(--blue);\n      }\n      \n      input:focus + .slider {\n        box-shadow: 0 0 1pxvar(--blue);\n      }\n      \n      input:checked + .slider:before {\n        -webkit-transform: translateX(26px);\n        -ms-transform: translateX(26px);\n        transform: translateX(26px);\n      }\n      \n      /* Rounded sliders */\n      .slider.round {\n        border-radius: 34px;\n      }\n      \n      .slider.round:before {\n        border-radius: 50%;\n      }\n    #gamestats-button {\n        position:absolute;\n        right: 20px;\n        top:20px;\n        z-index:9999;\n        background: #5961bb;\n        border-radius: 4px;\n        width:32px;\n        height:32px;\n        cursor:pointer;\n    }\n    #gamestats-button:hover{\n        background: #ff9000;\n    }\n    .navigate-solid.icon {\n        color: #fff;\n        position: absolute;\n        margin-left: 12px;\n        margin-top: 3px;\n        width: 14px;\n        height: 18px;\n        -webkit-transform: rotate(45deg);\n                transform: rotate(45deg);\n      }\n      \n      .navigate-solid.icon:before {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: -17px;\n        width: 0;\n        height: 0;\n        border-top: solid 18px transparent;\n        border-bottom: solid 18px currentColor;\n        border-left: solid 7px transparent;\n        border-right: solid 7px transparent;\n      }\n      \n      .navigate-solid.icon:after {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: 9px;\n        width: 0;\n        height: 0;\n        color: white;\n        border-top: solid 5px transparent;\n        border-bottom: solid 5px currentColor;\n        border-left: solid 7px transparent;\n        border-right: solid 7px transparent;\n      }\n\n      #game-stats-ui {\n        display:flex;\n      }\n     .hide {\n          display:none !important;\n      }\n      \n      #gs-content-container {\n          width:100%;\n      }\n      .subtitle{\n        padding-left: 20px;\n        font-size: 22px;\n      }\n      .section label {\n          margin-left:20px;\n          margin-right: 20px;\n      }\n      .select-holder \n      {\n        padding: 20px;\n      }\n      .gs-details{\n          padding:20px;\n      }\n      td{\n        padding: 5px 15px;\n      }\n      #StarTravel-section .select-holder {\n          display:inline-block;\n      }\n      .gs-close {\n          position:relative;\n        width: 20px;\n        height: 20px;\n        opacity: 0.3;\n      }\n      .gs-close:hover {\n        opacity: 1;\n      }\n      .gs-close:before, .gs-close:after {\n        position: absolute;\n        left: 15px;\n        content: ' ';\n        height: 20px;\n        width: 2px;\n        background-color: white;\n      }\n      .gs-close:before {\n        transform: rotate(45deg);\n      }\n      .gs-close:after {\n        transform: rotate(-45deg);\n      }\n      .tab-holder {\n          display:flex;\n          margin-right: 25px;\n      }\n      .ai-button{\n        // border: 2px solid;\n       \n        // margin-top: 20px;\n        // margin-left: 20px;\n        // background: rgba(84,186,217);\n        // color: white;\n        // TEXT-ALIGN: center;\n        // vertical-align: middle;\n        // padding: 5px 10px;\n      }\n      .ai-button{\n        position: relative;\n          display:block;\n          background: transparent;\n          width:200px;\n          height:30px;\n          line-height:60px;\n          text-align:center;\n          font-size:15px;\n          text-decoration:none;\n          text-transform:uppercase;\n          margin:40px auto;\n          margin-left: 25px;\n          z-index: 1;\n          margin-top: -10px;\n          background: rgba(0,0,0,0.5);\n      }\n      .ai-button:before, .ai-button:after {\n          width:200px;\n        left: 0px;\n          height:27px;\n          z-index: -1;\n      }\n    .selected:before,.selected:after {\n        border: 3px solid orange;\n    }\n    .orange:before,.orange:after {\n        border: 3px solid orange;\n    }\n    .orange:hover:before, .orange:hover:after {\n        background: orange;\n    }\n    .blue:before,.blue:after {\n        border: 3px solid  var(--blue);\n    }\n    .blue:hover:before, .blue:hover:after {\n        background:  var(--blue);\n    }\n        .ai-button:before{\n            position: absolute;\n            content: '';\n            border-bottom: none;\n            -webkit-transform: perspective(15px) rotateX(5deg);\n            -moz-transform: perspective(15px) rotateX(5deg);\n            transform: perspective(15px) rotateX(5deg);  \n          }\n          .ai-button:after{\n            position: absolute;\n            top: 32px;\n            content: '';\n            border-top: none;\n            -webkit-transform: perspective(15px) rotateX(-5deg);\n            -moz-transform: perspective(15px) rotateX(-5deg);\n            transform: perspective(15px) rotateX(-5deg);\n          }\n    .section-title {\n        font-size:23px;\n    }\n    .box-section {\n        border: 3px solid var(--blue);\n        min-height: 100px;\n        background: rgba(0, 159, 223, 0.3);\n    }\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n      \n      /* Track */\n      ::-webkit-scrollbar-track {\n        background:  rgba(0, 159, 223, 0.3);; \n      }\n       \n      /* Handle */\n      ::-webkit-scrollbar-thumb {\n        background: var(--blue); \n      }\n      \n      /* Handle on hover */\n      ::-webkit-scrollbar-thumb:hover {\n        background:var(--blue); \n      }\n      .player-info,.star-info, .ai-info, .finance-info {\n          display:none;\n      }\n      .show {\n          display:block;\n      }\n      .ai-toggle-holder {\n        display: flex;\n        justify-content: flex-end;\n        padding: 20px;\n        align-items: center;\n      }\n      .notify-item, .trans-item {\n        padding: 10px;\n        border-bottom: 2px solid var(--blue);\n        display:flex;\n      }\n      .notify-item .title{\n          flex:1\n      }\n      .notif-section .box-section, .trans-section .box-section {\n        height: 200px;\n        overflow: auto;\n      }\n      .notification-close {\n          cursor:pointer;\n      }\n      .avatar {\n        position: absolute;\n        right: 30px;\n        top: -20px;\n        width: 85px;\n        border: 3px solid var(--blue);\n      }\n      .player-holder {\n        position: relative;\n        padding: 20px;\n        margin-top: 20px;\n      }\n      .player-holder .box-section {\n          padding-top:20px;\n      }\n      .rec-section {\n        position: relative;\n        margin-top: 20px;\n      }\n      .rec-section .box-section {\n        margin-top: 10px;\n      }\n\n      #game-stats-ui::after {\n          content :$version;\n          position:absolute;\n          font-size: 11px;\n        color: white;\n        left: 20px;\n        bottom: 0;\n      }\n    ",state:{show:!1,showPlayer:!1,showStar:!1,showAi:!1,showFinance:!0,triggerPlayerInfo:!1},previousPlayerInfo:{},previousFinanceInfo:{},previousStarInfo:{},previousNotificationInfo:{},previousTranscript:[],previousRecommendations:[],showButton:null,isProd:()=>location.hostname.includes("np."),init(){document.querySelector("#game-stats-ui")&&this.update(),this.isProd()?this.create():document.addEventListener("DOMContentLoaded",this.onLocalLoad.bind(this))},onLocalLoad(){this.create()},create(){this.createContainer(),this.createPlayerInfo(),this.createStarInfo(),this.createAiInfo(),this.createFinanceInfo()},clean(){document.querySelector("#gamestats-style")&&(document.body.removeChild(document.querySelector("#game-stats-ui")),document.body.removeChild(document.querySelector("#gamestats-button")))},update(){this.createPlayerInfo(),this.createStarInfo(),this.createAiInfo(),this.createFinanceInfo()},createContainer(){this.container=document.createElement("div"),this.container.id="game-stats-ui",this.container.className=this.state.show?"":"hide",this.container.style="\n        min-width: 50vw;\n        height: 60vh;\n        position: absolute;\n        top: 10vh;\n        right: 20px;\n        background: rgba(0,0,0,0.7);\n        font-family: OpenSansRegular, sans-serif;\n        font-size: 16px;\n        color: white;\n        \n        align-items:flex-start;\n        align-content:flex-start;\n        flex-direction: column;\n        border: 3px solid var(--blue);\n        padding-bottom: 20px;\n        ";const e=document.createElement("style");e.innerHTML=this.css.replace("$version",`"version:${AI.version}"`),e.id="gamestats-style",this.container.appendChild(e),this.container.appendChild(this.createSectionTitle("Game AI"));const t=this.createElement("div","\n       \n        ",'\n        <div class=" ai-button selected" data-target="finance">FINANACE</div>\n        <div class=" ai-button blue" data-target="player">PLAYER INFO</div>\n        <div class=" ai-button blue" data-target="stars">STAR INFO</div>\n        <div class=" ai-button blue" data-target="ai">AI</div>\n        \n        ',void 0,"tab-holder");t.onclick=e=>{switch(this.contentContainer.scrollTop=0,document.querySelector('[data-target="stars"]').classList.remove("selected"),document.querySelector('[data-target="player"]').classList.remove("selected"),document.querySelector('[data-target="ai"]').classList.remove("selected"),document.querySelector('[data-target="finance"]').classList.remove("selected"),document.querySelector('[data-target="stars"]').classList.add("blue"),document.querySelector('[data-target="player"]').classList.add("blue"),document.querySelector('[data-target="ai"]').classList.add("blue"),document.querySelector('[data-target="finance"]').classList.add("blue"),document.querySelector(".player-info").classList.remove("show"),document.querySelector(".star-info").classList.remove("show"),document.querySelector(".ai-info").classList.remove("show"),document.querySelector(".finance-info").classList.remove("show"),e.srcElement.getAttribute("data-target")){case"player":document.querySelector(".player-info").classList.add("show"),document.querySelector('[data-target="player"]').classList.remove("blue"),document.querySelector('[data-target="player"]').classList.add("selected"),this.state.triggerPlayerInfo=!0;break;case"stars":document.querySelector(".star-info").classList.add("show"),document.querySelector('[data-target="stars"]').classList.remove("blue"),document.querySelector('[data-target="stars"]').classList.add("selected");break;case"ai":document.querySelector(".ai-info").classList.add("show"),document.querySelector('[data-target="ai"]').classList.remove("blue"),document.querySelector('[data-target="ai"]').classList.add("selected");break;case"finance":document.querySelector(".finance-info").classList.add("show"),document.querySelector('[data-target="finance"]').classList.remove("blue"),document.querySelector('[data-target="finance"]').classList.add("selected")}},this.container.appendChild(t),this.contentContainer=this.createElement("div","\n        flex: 1;\n        overflow:auto;\n        ","","gs-content-container"),this.container.appendChild(this.contentContainer);const n=document.createElement("div");n.innerHTML='<div class="navigate-solid icon"></div>',n.id="gamestats-button",n.onclick=this.onToggleShow.bind(this),this.showButton=n,document.body.appendChild(n),document.body.appendChild(this.container),document.querySelector("#gamestats-close-button").onclick=this.onToggleShow.bind(this)},onToggleShow(){this.state.show=!this.state.show,this.showButton.classList.toggle("hide"),this.container.classList.toggle("hide")},createPlayerInfo(){const e=AI.allPlayerStats(),t=AI.comparePlayers().compare,n=AI.comparePlayers().tech;if(!this.state.triggerPlayerInfo&&this.previousPlayerInfo&&this.previousPlayerInfo.players&&e){let t=this.previousPlayerInfo.players.map(e=>{const{experimentationPointsTime:t,...n}=e;return n}),n=e.players.map(e=>{const{experimentationPointsTime:t,...n}=e;return n});if(JSON.stringify(t)==JSON.stringify(n))return}this.state.triggerPlayerInfo=!1;const a=document.querySelector(".player-info");a&&(a.innerHTML="");const r=a||document.createElement("div");a||(this.state.showPlayer&&r.classList.add("show"),r.classList.add("player-info"),this.contentContainer.appendChild(r));const s=this.createBoxSection("Compare Players",this.createTableFromObject(t,this.getTableRowsFromArray.bind(this)).innerHTML);r.appendChild(s);const i=this.createBoxSection("Compare Tech",this.createTableFromObject(n,this.getTableRowsFromArray.bind(this)).innerHTML);r.appendChild(i),e.players.forEach(e=>{const{uid:t,...n}=e,a=this.createBoxSection(e.player,this.createTableFromObject(n).innerHTML);a.classList.add("player-holder");const s=document.createElement("img");s.src=Helper.getPlayerAvatar(e.uid),s.className="avatar",a.appendChild(s),r.appendChild(a)}),e.toNextTechLevel.forEach(e=>{r.appendChild(this.createBoxSection(e.player+" Potential Tech",this.createTableFromObject(e).innerHTML))}),this.previousPlayerInfo=e},createStarInfo(){const e=AI.starsInfo();if(JSON.stringify(e)==JSON.stringify(this.previousStarInfo))return;const t=document.querySelector(".star-info");t&&(t.innerHTML="");const n=t||document.createElement("div");t||(n.classList.add("star-info"),this.contentContainer.appendChild(n)),Object.keys(e).forEach(t=>{const a=e[t];n.appendChild(this.createBoxSection(a.player+"'s Top Stars",this.createTableFromObject(a.topStars,this.getTableRowsFromArray.bind(this)).innerHTML));let r="";inRange={},a.inRangeForAttack.forEach(e=>{inRange[e.myStar.starName]=inRange[e.myStar.starName]||[],inRange[e.myStar.starName].push(e.enemyStar)}),Object.keys(inRange).forEach(e=>{r+=this.createTableFromObject(inRange[e],this.getTableRowsFromArray.bind(this)).innerHTML}),n.appendChild(this.createBoxSection(a.player+"'s Stars In Range for Attack",r))}),this.previousStarInfo=e},createAiInfo(){const e=AI.checkPlayerNotifications(),t=[...AI.state.transcript],n=AI.comparePlayers().recommendations;if(this.previousRecommendations.length&&JSON.stringify(this.previousRecommendations)==JSON.stringify(n)&&this.previousTranscript.length&&JSON.stringify(this.previousTranscript)==JSON.stringify(t)&&JSON.stringify(e)==JSON.stringify(this.previousNotificationInfo))return;const a=document.querySelector(".ai-info"),r=a||document.createElement("div");a||(this.state.showAi&&r.classList.add("show"),r.classList.add("ai-info"),r.innerHTML=`\n            <div class="ai-toggle-holder">\n            <span style="margin-right:20px;">turn on</span>\n            <label class="switch">\n            <input type="checkbox" ${AI.state.aiMode?"checked":""}>\n            <span class="slider round"></span>\n            </label>\n            </div>\n            `,r.querySelector("input").onchange=e=>{AI.toggle(),r.querySelector("input").checked=AI.state.aiMode},this.contentContainer.appendChild(r));let s="";n.forEach((e,t)=>{s+=`\n            <div class="trans-item"><span class="title">${e}</span></div>\n            `});const i=r.querySelector(".rec-section");if(i)i.querySelector(".box-section").innerHTML=s;else{const e=this.createBoxSection("RECOMMENDATIONS",s);e.classList.add("rec-section"),r.appendChild(e);const t=new Image;t.classList.add("avatar"),t.src="https://lh5.googleusercontent.com/iOPRLD48c3SqrWdlqQy5WjHWXob-fWaW28U_afLxGWHvMkaOONtYh1-A8qSiOtAf_1yytVcRbu7J4Y2d9jhE=w1920-h969",e.appendChild(t)}const o=r.querySelector(".notif-section");if(notificationHTML="",e.forEach((e,t)=>{notificationHTML+=`\n           <div class="notify-item"><span class="title">${e}</span></div>\n           `}),o)o.querySelector(".box-section").innerHTML=notificationHTML;else{const e=this.createBoxSection("INBOX",notificationHTML);e.classList.add("notif-section"),r.appendChild(e)}Array.prototype.forEach.call(r.querySelectorAll(".notification-close"),e=>{e.onclick=()=>{}});let l="";t.forEach((e,t)=>{l+=`\n            <div class="trans-item"><span class="title">${e}</span></div>\n            `});const c=r.querySelector(".trans-section");if(c)c.querySelector(".box-section").innerHTML=l;else{const e=this.createBoxSection("TRANSCRIPT",l);e.classList.add("trans-section"),r.appendChild(e)}this.previousNotificationInfo=e,this.previousTranscript=t,this.previousRecommendations=n},createFinanceInfo(){const e=AI.upgradeData();if(JSON.stringify(this.previousFinanceInfo)==JSON.stringify(e))return;const t=document.querySelector(".finance-info");t&&(t.innerHTML="");const n=t||document.createElement("div");t||(n.classList.add("show"),n.classList.add("finance-info"),this.contentContainer.appendChild(n)),n.appendChild(this.createBoxSection("Banking Income After Upgrade",this.createTableFromObject({currentPerProd:"$"+e.banking.currentPerProd,currentLevel:""+e.banking.level,onUpgradePerProd:"$"+e.banking.upgradePerProd}).innerHTML)),n.appendChild(this.createBoxSection("Manufactoring After Upgrade",this.createTableFromObject({currentShipsPerHour:e.manufactoring.currentShipsPerHour+" ships",currentLevel:""+e.manufactoring.level,onUpgradeShipsPerHour:e.manufactoring.upgradeShipsPerHour+" ships"}).innerHTML)),n.appendChild(this.createBoxSection("Economy After Terraforming Upgrade",this.createTableFromObject({currentTotalCost:""+e.economy.currentTotalCost,onUpgradeTotalCost:""+e.economy.upgrade,saving:`<span class="orange-color">${e.economy.saving}</span>`}).innerHTML)),n.appendChild(this.createBoxSection("Industry After Terraforming Upgrade",this.createTableFromObject({currentTotalCost:""+e.industry.currentTotalCost,onUpgradeTotalCost:""+e.industry.upgrade,saving:`<span class="orange-color">${e.industry.saving}</span>`}).innerHTML)),n.appendChild(this.createBoxSection("Science After Terraforming Upgrade",this.createTableFromObject({currentTotalCost:""+e.science.currentTotalCost,onUpgradeTotalCost:""+e.science.upgrade,saving:`<span class="orange-color">${e.science.saving}</span>`}).innerHTML)),n.appendChild(this.createBoxSection("Gate After Terraforming Upgrade",this.createTableFromObject({currentTotalCost:""+e.gate.currentTotalCost,onUpgradeTotalCost:""+e.gate.upgrade,saving:`<span class="orange-color">${e.gate.saving}</span>`}).innerHTML)),this.previousFinanceInfo=e},createBoxSection(e,t){return this.createElement("div","\n        padding:20px;\n        ",`\n            <span class="section-title">${e}</span>\n            <div class="box-section">\n            ${t}\n            </div>\n        `,"","")},createNotificationInfo(){const e=this.createSection("Notification");e.style=" max-height:50vh;\n        overflow:auto;",this.updateSection("Notification",e),e.querySelector(".gs-subtitle").appendChild(this.createElement("button","\n            background: #5961bb;\n            border-radius: 4px;\n            align-self: flex-start;\n            margin-top: 20px;\n            color:white;\n            border:none;\n            cursor:pointer;\n\n        ","clear all","clear-notifications-button","")),e.querySelector("#clear-notifications-button").onclick=()=>{GameStats.clearAllNotifications(),Array.prototype.forEach.call(e.querySelectorAll(".gs-alert"),e=>{e.parentNode.removeChild(e)})};const t={};GameStats.notifications.forEach(e=>{if(GameStats.playerId==e.playerId)return;const{playerName:n,...a}=e;t[n]=t[n]||[],t[n].push(a)}),Object.keys(t).length&&Object.keys(t).forEach(n=>{e.appendChild(this.createElement("h1","","Player "+n)),t[n].forEach(t=>{Object.keys(t.star).filter(e=>"starId"!==e&&"type"!==e).forEach(n=>{const a=GameStats.galaxy.stars[t.star.starId];e.appendChild(this.createNotificaton(`star ${a.n} has increased its ${n} from ${t.star[n].prevously} to ${t.star[n].current}`,t.uid))})})})},createNotificaton(e,t){const n=this.createElement("div","\n        padding: 20px;\n        background: red;\n        border-bottom:1px solid black;\n        display:flex;\n        position:relative;\n        ",`\n        <span style="flex:1">${e}</span>\n        <div class="gs-close"></div>\n        `,t,"gs-alert");return n.querySelector(".gs-close").onclick=()=>{GameStats.removedNotification(t),n.parentNode.removeChild(n)},n},createTechInfo(){const e=this.createSection("Tech Production Days");this.updateSection("Tech Production Days",e),this.contentContainer.appendChild(e);const t=GameStats.allTechInfo(GameStats.playerId);e.appendChild(this.createTableFromObject(t))},createPlayersInfo(){const e=this.createSection("Players Info");this.updateSection("Players Info",e),this.contentContainer.appendChild(e);const t=GameStats.comparePlayers();e.appendChild(this.createTableFromObject(t,this.getTableRowsFromArray.bind(this)))},createStarDetail(){const e=this.createSection("Star Details"),t=this.createElement("select"),n=this.createElement("div","","","gs-star-details","gs-details"),a=Object.keys(GameStats.Stars).filter(e=>void 0!==GameStats.galaxy.stars[GameStats.Stars[e]].st);let r="<option value=-1></option>";a.forEach(e=>{const t=GameStats.getStarById(e);r+=`<option value=${t.uid}>${t.n}</option>`}),t.innerHTML=r,t.onchange=this.onStarDetailChange.bind(this);const s=document.createElement("div");s.className="select-holder";const i=document.createElement("label");i.innerHTML="select a star",s.appendChild(i),s.appendChild(t),e.appendChild(s),e.appendChild(n),this.contentContainer.appendChild(e)},createStarTravel(){const e=this.createSection("Star Travel"),t=Object.keys(GameStats.galaxy.stars).map(e=>({value:e,label:GameStats.galaxy.stars[e].n})),n=this.createElement("div","","","gs-star-travel-details","gs-details");e.appendChild(this.createSelect("from star",t,this.onTravelStarSelect.bind(this))),e.appendChild(this.createSelect("to star",t,this.onTravelStarSelect.bind(this))),e.appendChild(n),this.contentContainer.appendChild(e)},onTravelStarSelect(){const e=document.querySelector("#StarTravel-section").querySelectorAll("select");if(-1!=e[0].value&&-1!=e[1].value){const t=GameStats.checkTravelCapability(e[0].value,e[1].value);document.querySelector("#gs-star-travel-details").innerHTML=`\n                <p>Time: <span style="color:${this.colors.yellow} ">${t.time}</span></p>\n                <p>Distance: <span style="color:${this.colors.yellow}">${t.distance}</span></p>\n                <p>Tech Level Required: <span style="color:${this.colors.yellow}">${t.techLevel}</span></p>\n            `}else document.querySelector("#gs-star-travel-details").innerHTML=""},createStarBattle(){const e=this.createSection("Star Battle"),t=Object.keys(GameStats.galaxy.stars).map(e=>({value:e,label:GameStats.galaxy.stars[e].n})),n=this.createElement("div","","","gs-star-battle-details","gs-details");e.appendChild(this.createSelect("select a star",t,this.onBattleSelect.bind(this))),e.appendChild(n),this.contentContainer.appendChild(e)},onBattleSelect(e){const t=document.querySelector("#gs-star-battle-details");if(-1==e.target.value)return void(t.innerHTML="");const n=GameStats.battle(e.target.value,!0),a=this.createTableFromObject(n,this.getTableRowsFromArray.bind(this)).innerHTML;t.innerHTML=n.length?a:"No battles found"},createSelect(e,t,n){const a=document.createElement("div"),r=document.createElement("label"),s=this.createElement("select");a.className="select-holder";let i="<option value=-1></option>";return t.forEach(e=>{i+=`<option value=${e.value}>${e.label}</option>`}),s.innerHTML=i,s.onchange=n,r.innerHTML=e,a.appendChild(r),a.appendChild(s),a},onStarDetailChange(e){const t=document.querySelector("#gs-star-details");if(-1==e.target.value)return void(t.innerHTML="");let n=GameStats.galaxy.stars[e.target.value];n={Name:n.n,Ships:n.st,NaturalResource:n.nr,TerraformedResource:n.r,player:GameStats.getPlayerById(n.puid).alias},t.innerHTML=this.createTableFromObject(n).innerHTML},updateSection(e,t){const n=e.replace(/ /g,"")+"-section",a=this.contentContainer.querySelector("#"+n);a?a.parentNode.replaceChild(t,a):this.contentContainer.appendChild(t)},createSection(e){const t=e.replace(/ /g,"")+"-section",n=this.createElement("div","width: 100%; background:"+this.colors.darkBlue,"",t,"section"),a=this.createSectionSubTitle(e);return n.appendChild(a),n},createSectionTitle(e){return this.createElement("div","\n            \n            font-size: 28px;\n            font-weight: normal;\n            line-height: 125%;\n            padding: 12px;\n            padding-top: 4px;\n            padding-bottom: 4px;\n            display: flex;\n            width:100%;\n            box-sizing: border-box;\n            justify-content: flex-end\n            ",'\n            <div id="gamestats-close-button" class=" " style="position:relative; margin-top:0; cursor:pointer;\n            margin-bottom: 5px;">x</div>\n            ')},createSectionSubTitle(e){return this.createElement("div",`\n            background: ${this.colors.black};\n            font-size: 22px;\n            color:#FF9000; \n            font-weight: normal;\n            line-height: 125%;\n            padding: 12px;\n            padding-top: 4px;\n            padding-bottom: 4px;\n            display: flex;\n            width:100%;\n            box-sizing: border-box;\n            `,`\n            <h1 style="flex:1">${e}</h1>\n            `,"","gs-subtitle")},createElement(e,t,n,a,r){const s=document.createElement(e);return s.className=r||"",s.style=t,s.id=a||"",s.innerHTML=n||"",s},createTableFromObject(e,t){const n=this.createElement("div","\n        padding: 20px;\n        overflow: auto;\n        box-sizing: border-box;\n        "),a=this.createElement("table","\n        color:white;\n        width:100%;\n       \n        "),r=document.createElement("thead"),s=document.createElement("tbody");a.appendChild(r),a.appendChild(s);let i=t?t(e,"",r):"\n        ";return t||Object.keys(e).forEach(t=>{i+=`\n                <tr><td>${this.camelToSpace(t)}</td><td align="right">\n                ${"object"==typeof e[t]?this.createInnerTableString(e[t]):e[t]}\n                \n                </td></tr>\n            `}),s.innerHTML=i,n.appendChild(a),n},getTableRowsFromArray(e,t,n){if(!e.length)return"";let a=`<tr style="color:${this.colors.yellow}">`;return Object.keys(e[0]).forEach(e=>{a+=`\n            <td>${this.camelToSpace(e).replace(/ /g,"<br>")}</td>\n        `}),a+="</tr>",n.innerHTML=a,e.forEach(e=>{t+="<tr>",Object.keys(e).forEach(n=>{t+=`\n                    <td>${e[n]}</td>\n                `}),t+="</tr>"}),t},camelToSpace:e=>String(e).replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()})),createInnerTableString(e){let t='<table style="width: 100%; color: white;text-align: center;"><thead><tr>',n="<tbody><tr>";return Object.keys(e).forEach(a=>{t+=`<td style="color:${this.colors.yellow};">${this.camelToSpace(a)}</td>`,n+=`<td>${this.camelToSpace(e[a])}</td>`}),t+="</tr></thead>",n+="</tr></tbody></table>",t+n}},Helper={Stars:{},Fleets:{},Players:{},isProd:()=>location.hostname.includes("np."),init(){Object.keys(NeptunesPride.universe.galaxy.stars).forEach(e=>{this.Stars[NeptunesPride.universe.galaxy.stars[e].n.replace(/ /g,"_")]=NeptunesPride.universe.galaxy.stars[e].uid}),Object.keys(NeptunesPride.universe.galaxy.fleets).forEach(e=>{this.Fleets[NeptunesPride.universe.galaxy.fleets[e].n.replace(/ /g,"_")]=NeptunesPride.universe.galaxy.fleets[e].uid}),Object.keys(NeptunesPride.universe.galaxy.players).forEach(e=>{this.Players[NeptunesPride.universe.galaxy.players[e].alias.replace(/ /g,"_")]=NeptunesPride.universe.galaxy.players[e].uid})},getStarByName:e=>Object.keys(NeptunesPride.universe.galaxy.stars).map(e=>NeptunesPride.universe.galaxy.stars[e]).find(t=>t.uid==Number(e)),getFleetByName:e=>Object.keys(NeptunesPride.universe.galaxy.fleets).map(e=>NeptunesPride.universe.galaxy.fleets[e]).find(t=>t.uid==Number(e)),getPlayerByName:e=>Object.keys(NeptunesPride.universe.galaxy.players).map(e=>NeptunesPride.universe.galaxy.players[e]).find(t=>t.uid==Number(e)),getPlayerAvatar(e){const t=this.isProd()?"../images/avatars/160/":"img/",n=NeptunesPride.universe.galaxy.players[e];return n?`${t}${n.avatar}.jpg`:""}};AI.init(),GameUI.init(),Helper.init();